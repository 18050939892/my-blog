---
// @ts-nocheck
import { getCollection } from "astro:content";
import type { GetStaticPathsOptions } from "astro";
import Main from "@/layouts/Main.astro";
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Card from "@/components/Card.astro";
import Pagination from "@/components/Pagination.astro";
import getUniqueTags from "@/utils/getUniqueTags";
import getPostsByTag from "@/utils/getPostsByTag";
import { SITE } from "@/config";
import MyCard from "@/components/MyCard.astro";
import { slugifyAll, slugifyStr } from '../../../utils/slugify'

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    
    function slugify(text: string): string {
        return text
            .toString()
            .toLowerCase()
            .trim()
            .replace(/\s+/g, '-')       // 替换空格为 -
            .replace(/&/g, '-and-')     // 替换 & 为 'and'
            .replace(/[^\w\-]+/g, '')   // 移除非单词字符
            .replace(/\-\-+/g, '-');    // 替换多个 - 为单个 -
    }
    const responsedemo2 = await fetch(`http://localhost:4321/api/edit-post`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({slug:'fsfs', updates:{frontmatter:{},content:''} , update:true }),
    });
    const data = await responsedemo2.json();
    let myTags = data.comments.flatMap((post:any) => post.tags)
        .map((tag:any) => ({ tag: slugifyStr(tag), tagName: tag }))
        .filter(
            (value:any, index:any, self:any) =>
                self.findIndex((tag:any) => tag.tag === value.tag) === index
        )
        .sort((tagA:any, tagB:any) => tagA.tag.localeCompare(tagB.tag));
    return myTags.flatMap(({ tag, tagName }) => {
        const tagPosts = data.comments.filter((post:any) => slugifyAll(post.tags).includes(tag));
        return paginate(tagPosts, {
            params: { tag },
            props: { tagName },
            pageSize: SITE.postPerPage,
        });
    });
  //
  // const posts = await getCollection("blog");
  // const tags = getUniqueTags(posts);
  //
  // return tags.flatMap(({ tag, tagName }) => {
  //   const tagPosts = getPostsByTag(posts, tag);
  //
  //   return paginate(tagPosts, {
  //     params: { tag },
  //     props: { tagName },
  //     pageSize: SITE.postPerPage,
  //   });
  // });
}

const params = Astro.params;
const { tag } = params;
const { page, tagName } = Astro.props;


function slugify(text: string): string {
    return text
        .toString()
        .toLowerCase()
        .trim()
        .replace(/\s+/g, '-')       // 替换空格为 -
        .replace(/&/g, '-and-')     // 替换 & 为 'and'
        .replace(/[^\w\-]+/g, '')   // 移除非单词字符
        .replace(/\-\-+/g, '-');    // 替换多个 - 为单个 -
}
---

<Layout title={`Tag: ${tagName} | ${SITE.title}`}>
  <Header />
  <Main
    pageTitle={[`Tag:`, `${tagName}`]}
    titleTransition={tag}
    pageDesc={`All the articles with the tag "${tagName}".`}
  >
    <h1 slot="title" transition:name={tag}>{`Tag:${tag}`}</h1>
    <ul>
      {page.data.map((date:any) =>  <MyCard variant="h3"  data={date} id={slugify(date.title)} />)}
    </ul>
  </Main>

  <Pagination {page} />

  <Footer noMarginTop={page.lastPage > 1} />
</Layout>
